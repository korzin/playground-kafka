version: '2'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-rest:
    container_name: kafka-rest
    image: confluentinc/cp-kafka-rest:5.4.1
#    depends_on:
#      - kafka
    ports:
      - "8182:8082"
      - "8181:8081"
    environment:
      KAFKA_REST_HOST_NAME: localhost:9092
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: localhost:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: localhost:8081
  elk:
    container_name: elk
    image: blacktop/elastic-stack
  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'mysql_user'
      MYSQL_PASSWORD: 'mysql_user_pw'
      MYSQL_ROOT_PASSWORD: 'root_pw'
    ports:
      - '3307:3306'
    expose:
      - '3307'
    volumes:
      - db-data:/var/lib/mysql

volumes:
  db-data:
